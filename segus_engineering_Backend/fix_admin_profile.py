#!/usr/bin/env python
import os
import sys

import django

# Configuration Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "segus_engineering_Backend.settings")
django.setup()

from django.contrib.auth import get_user_model  # noqa: E402
from django.db import transaction  # noqa: E402

from employees.models import Employee  # noqa: E402

User = get_user_model()

print("=== SUPPRESSION DU PROFIL EMPLOY√â ADMIN ===\n")

# Trouver l'administrateur avec profil employ√©
admin_email = "chihidorsaf99@gmail.com"
try:
    user = User.objects.get(email=admin_email)
    employee = Employee.objects.get(user=user)

    print(f"Trouv√©: {employee.full_name} ({admin_email})")
    print(f"R√¥le utilisateur: {user.role}")

    # Supprimer le profil employ√©
    with transaction.atomic():
        employee.delete()
        print(f"‚úÖ Profil employ√© supprim√© pour {admin_email}")
        print("üí° L'utilisateur peut toujours se connecter comme administrateur")

except Employee.DoesNotExist:
    print(f"‚ùå Aucun profil employ√© trouv√© pour {admin_email}")
except User.DoesNotExist:
    print(f"‚ùå Utilisateur {admin_email} non trouv√©")

print("\n=== V√âRIFICATION FINALE ===")
remaining_admin_employees = Employee.objects.filter(user__role="ADMIN").count()
total_employees = Employee.objects.filter(user__role="EMPLOYE").count()

print(f"Profils employ√©s avec r√¥le ADMIN: {remaining_admin_employees}")
print(f"Profils employ√©s avec r√¥le EMPLOYE: {total_employees}")

if remaining_admin_employees == 0:
    print("‚úÖ Probl√®me r√©solu ! Red√©marrez le serveur.")
else:
    print("‚ö†Ô∏è Il reste encore des profils employ√©s avec r√¥le ADMIN")
