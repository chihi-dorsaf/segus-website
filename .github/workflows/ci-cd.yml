name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd segus_engineering_Backend
          pip install --upgrade pip
          pip install pytest pytest-django
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create logs directory
        run: |
          cd segus_engineering_Backend
          mkdir -p logs
          touch logs/django.log

      - name: Run tests
        run: |
          cd segus_engineering_Backend
          python -m pytest
        env:
          DJANGO_SETTINGS_MODULE: segus_engineering_Backend.settings

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Segus_Engineering_Frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd Segus_Engineering_Frontend
          npm ci

      - name: Debug angular.json (first 5 lines)
        run: |
          head -n 5 Segus_Engineering_Frontend/angular.json

      - name: Run tests
        run: |
          cd Segus_Engineering_Frontend
          npm run test:ci
        env:
          CI: true
          CHROME_BIN: /usr/bin/google-chrome

      - name: Build
        run: |
          cd Segus_Engineering_Frontend
          npm run build:prod

  build-docker:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate Docker secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "ERROR: DOCKER_USERNAME secret is not set or empty"
            echo "Please add it at: https://github.com/${{ github.repository }}/settings/secrets/actions"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "ERROR: DOCKER_PASSWORD secret is not set or empty"
            exit 1
          fi
          echo "Docker credentials validated successfully"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Debug Docker Username
        run: |
          echo "Checking DOCKER_USERNAME..."
          if [ -z "$DOCKER_USERNAME" ]; then
            echo "ERROR: DOCKER_USERNAME is empty!"
            exit 1
          fi
          echo "DOCKER_USERNAME length: ${#DOCKER_USERNAME}"
          echo "DOCKER_USERNAME starts with: ${DOCKER_USERNAME:0:3}..."
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./segus_engineering_Backend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/segus-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/segus-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Segus_Engineering_Frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/segus-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/segus-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-ansible:
    needs: build-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Ansible
        run: |
          pip install ansible

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install community.docker

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create runtime inventory
        run: |
          mkdir -p ansible/inventory
          cat > ansible/inventory/runtime.yml <<'EOF'
          all:
            children:
              web_servers:
                hosts:
                  production:
                    ansible_host: "${PROD_HOST}"
                    ansible_user: "${PROD_USER}"
                    ansible_ssh_private_key_file: ~/.ssh/id_rsa
          EOF
        env:
          PROD_HOST: ${{ secrets.PROD_HOST }}
          PROD_USER: ${{ secrets.PROD_USER }}

      - name: Deploy with Ansible
        run: |
          cd ansible
          ansible-playbook -i inventory/runtime.yml playbooks/deploy.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}